# Javascript Node CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.1/language-javascript/ for more details
#
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.2.6
  kubernetes: circleci/kubernetes@0.11.0

jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.14.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn lint
      - run: yarn format:check
      - run: yarn test
      - run: yarn test:cov
      - run: yarn test:e2e

  build:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run: docker build -t enderpiyale/atolye15:latest .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push enderpiyale/atolye15

  deploy:
    test-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Atolye15 EKS Cluster
          type: string
      steps:
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
        - run:
            command: |
              kubectl get services
            name: Atolye15 cluster

workflows:
  test-build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
        - aws-eks/create-cluster:
          cluster-name: atolye15demo
        - test-cluster:
          cluster-name: atolye15demo
          requires:
            - aws-eks/create-cluster
        - aws-eks/delete-cluster:
          cluster-name: atolye15demo
          requires:
            - test-cluster:       

